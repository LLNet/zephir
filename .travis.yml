dist: trusty

language: c

git:
  depth: 1

notifications:
  email: false

cache:
  apt: true
  timeout: 604800
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

  - rm -rfv $HOME/.cabal/packages/head.hackage

env:
  global:
    - HLINTVER=2.1.14

matrix:
  fast_finish: true
  include:
    - compiler: "ghc-7.10.1"
      env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons:
        apt:
          packages:
            - ghc-ppa-tools
            - cabal-install-2.4
            - ghc-7.10.1
          sources:
            - hvr-ghc
    - compiler: "ghc-8.0.2"
      env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons:
        apt:
          packages:
            - ghc-ppa-tools
            - cabal-install-2.4
            - ghc-8.0.2
          sources:
            - hvr-ghc
    - compiler: "ghc-8.6.3"
      env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons:
        apt:
          packages:
            - ghc-ppa-tools
            - cabal-install-2.4
            - ghc-8.6.3
          sources:
            - hvr-ghc

  allow_failures:
    - compiler: "ghc-head"

before_install:
  - HC=${CC}
  - HCPKG=${HC/ghc/ghc-pkg}
  - unset CC
  - mkdir ~/.hlint
  - curl -L https://github.com/ndmitchell/hlint/releases/download/v$HLINTVER/hlint-$HLINTVER-x86_64-linux.tar.gz | tar -xz --strip-components=1 -C ~/.hlint
  - "PATH=$HOME/.hlint:/opt/ghc/bin:/opt/cabal/bin:/opt/ghc-ppa-tools/bin:$PATH"
  - HCNUMVER=$(( $(${HC} --numeric-version|sed -E 's/([0-9]+)\.([0-9]+)\.([0-9]+).*/\1 * 10000 + \2 * 100 + \3/') ))
  - echo $HCNUMVER

install:
  - cabal --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - BENCH=${BENCH---enable-benchmarks}
  - TEST=${TEST---enable-tests}
  - HADDOCK=${HADDOCK-true}
  - UNCONSTRAINED=${UNCONSTRAINED-true}
  - NOINSTALLEDCONSTRAINTS=${NOINSTALLEDCONSTRAINTS-false}
  - GHCHEAD=${GHCHEAD-false}
  - travis_retry cabal new-update -v
  - "sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config"
  - grep -Ev -- '^\s*--' ${HOME}/.cabal/config | grep -Ev '^\s*$'
  - "printf 'packages: \".\"\\n' > cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "if ! $NOINSTALLEDCONSTRAINTS; then for pkg in $($HCPKG list --simple-output); do echo $pkg  | grep -vw -- zephir | sed 's/^/constraints: /' | sed 's/-[^-]*$/ installed/' >> cabal.project.local; done; fi"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - rm -f cabal.project.freeze
  - cabal new-build -w ${HC} ${TEST} ${BENCH} --project-file="cabal.project" --dep -j2 all
  - rm -rf .ghc.environment.* "."/dist
  - DISTDIR=$(mktemp -d /tmp/dist-zephir.XXXX)

script:
  - cabal new-sdist all
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -name '*.tar.gz' -exec tar -xvf '{}' \;
  - "printf 'packages: zephir-*/*.cabal\\n' > cabal.project"
  - "printf 'write-ghc-environment-files: always\\n' >> cabal.project"
  - touch cabal.project.local
  - "if ! $NOINSTALLEDCONSTRAINTS; then for pkg in $($HCPKG list --simple-output); do echo $pkg  | grep -vw -- zephir | sed 's/^/constraints: /' | sed 's/-[^-]*$/ installed/' >> cabal.project.local; done; fi"
  - cat cabal.project || true
  - cat cabal.project.local || true

  # build & run tests, build benchmarks
  - cabal new-build -w ${HC} ${TEST} ${BENCH} all
  - if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} ${BENCH} all; fi

  # cabal check
  - (cd zephir-* && cabal check)

  # hlint
  - (cd zephir-* && hlint app --cpp-ansi --cpp-define=HLINT)
